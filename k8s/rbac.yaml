apiVersion: v1
kind: ServiceAccount
metadata:
  name: video-ad-placement
  namespace: video-ad-placement
  labels:
    app.kubernetes.io/name: video-ad-placement
    app.kubernetes.io/component: serviceaccount

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: video-ad-placement
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: serviceaccount

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: video-ad-placement-reader
  labels:
    app.kubernetes.io/name: video-ad-placement
    app.kubernetes.io/component: rbac
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-reader
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: rbac
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: video-ad-placement-reader
  labels:
    app.kubernetes.io/name: video-ad-placement
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: video-ad-placement-reader
subjects:
  - kind: ServiceAccount
    name: video-ad-placement
    namespace: video-ad-placement

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-reader
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-reader
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: video-ad-placement

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: video-ad-placement-namespace-admin
  namespace: video-ad-placement
  labels:
    app.kubernetes.io/name: video-ad-placement
    app.kubernetes.io/component: rbac
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "pods", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: video-ad-placement-namespace-admin
  namespace: video-ad-placement
  labels:
    app.kubernetes.io/name: video-ad-placement
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: video-ad-placement-namespace-admin
subjects:
  - kind: ServiceAccount
    name: video-ad-placement
    namespace: video-ad-placement

---
# Pod Security Policy for GPU workloads
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: video-ad-placement-psp
  labels:
    app.kubernetes.io/name: video-ad-placement
    app.kubernetes.io/component: security
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false 